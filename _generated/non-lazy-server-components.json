{
  "meta": {
    "kind": "non-lazy-server-components",
    "path": "non-lazy-server-components",
    "title": "Non-Lazy Server Components",
    "description": "Navigation is blocked until the Server Components are rendered. Once rendered, they are cached"
  },
  "codes": {
    "components/CodeExample.server.vue": "<script setup lang=\"ts\">\nimport hljs from 'highlight.js/lib/core';\nimport typescript from 'highlight.js/lib/languages/typescript';\nimport 'highlight.js/styles/github-dark.css';\n\nhljs.registerLanguage('typescript', typescript);\n\ntype Props = {\n  count: number;\n};\n\nconst props = defineProps<Props>();\n\nconst html = computed(() => {\n  const code = `const a = ${props.count}`;\n  return hljs.highlightAuto(code).value;\n});\n</script>\n\n<template>\n  <div\n    class=\"relative rounded-md border border-dashed border-gray-400 bg-blue-900 p-6\"\n  >\n    <div class=\"space-y-4\">\n      <p class=\"absolute -top-4 rounded-full bg-gray-600 px-4 py-2 text-sm\">\n        Server Component\n      </p>\n      <p>This component is not included in the bundle</p>\n      <p>If count is changed, code is changed.</p>\n      <div class=\"bg-gray-900\" v-html=\"html\" />\n\n      <p class=\"text\">scoped style work</p>\n    </div>\n\n    <slot />\n  </div>\n</template>\n\n<style scoped>\n.text {\n  color: #00dc82;\n}\n</style>\n",
    "components/HeavyComp.server.vue": "<script setup lang=\"ts\">\nconst heavyTask = () => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({});\n    }, 3000);\n  });\n};\n\nawait heavyTask();\n</script>\n\n<template>\n  <div\n    class=\"relative rounded-md border border-dashed border-gray-400 bg-blue-900 p-6\"\n  >\n    <div class=\"space-y-4\">\n      <p class=\"absolute -top-4 rounded-full bg-gray-600 px-4 py-2 text-sm\">\n        Server Component\n      </p>\n      <p>This component is heavy.</p>\n    </div>\n\n    <slot />\n  </div>\n</template>\n",
    "components/islands/IslandCodeExample.vue": "<script setup lang=\"ts\">\nimport hljs from 'highlight.js/lib/core';\nimport typescript from 'highlight.js/lib/languages/typescript';\nimport 'highlight.js/styles/github-dark.css';\n\nhljs.registerLanguage('typescript', typescript);\n\ntype Props = {\n  count: number;\n};\n\nconst props = defineProps<Props>();\n\nconst html = computed(() => {\n  const code = `const a = ${props.count}`;\n  return hljs.highlightAuto(code).value;\n});\n</script>\n\n<template>\n  <div\n    class=\"relative mt-6 rounded-md border border-dashed border-gray-400 bg-blue-900 p-6\"\n  >\n    <div class=\"space-y-4\">\n      <p class=\"absolute -top-4 rounded-full bg-gray-600 px-4 py-2 text-sm\">\n        Server Component\n      </p>\n      <p>This component is not included in the bundle</p>\n      <p>If count is changed, code is changed.</p>\n      <div class=\"bg-gray-900\" v-html=\"html\" />\n    </div>\n\n    <slot />\n  </div>\n</template>\n",
    "pages/examples/non-lazy-server-components.vue": "<script setup lang=\"ts\">\ndefinePageMeta({\n  layout: 'without-code',\n});\n\nconst count = ref(0);\n</script>\n\n<template>\n  <Boundary label=\"Client Component\">\n    <HeavyComp class=\"mt-6\" />\n  </Boundary>\n</template>\n"
  }
}